buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.0'
        classpath 'com.github.triplet.gradle:play-publisher:1.2.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'


def loadExtraProperties(String fileName) {
    def props = new Properties()
    if (System.getenv('CI_BITRISE') == "true") {
        URL propFile = new URL(System.getenv("BITRISEIO_treetracker_URL"))
        BufferedReader input = new BufferedReader(
                new InputStreamReader(propFile.openStream()))
        props.load(input)
    } else {
        props.load(new FileInputStream(fileName))
    }

    props.each { key, val ->
        project.setProperty(key, val)
    }
}


loadExtraProperties("treetracker.keys.properties")


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = file('keys.json')
        }
    }
    defaultConfig {
        applicationId "org.greenstand.android.TreeTracker"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 73
        versionName "1.2.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        playAccountConfig = playAccountConfigs.defaultAccountConfig
        buildConfigField "String", "DOS_ACCESS_KEY", "\"${dos_access_key}\""
        buildConfigField "String", "DOS_SECRET_KEY", "\"${dos_secret_key}\""
        buildConfigField "String", "TREETRACKER_CLIENT_ID", "\"${treetracker_client_id}\""
        buildConfigField "String", "TREETRACKER_CLIENT_SECRET", "\"${treetracker_client_secret}\""
        buildConfigField 'Boolean', 'TREE_HEIGHT_FEATURE_ENABLED', "false"
        buildConfigField 'Boolean', 'TREE_NOTE_FEATURE_ENABLED', "true"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }



    buildTypes {
        release {
            minifyEnabled true
            resValue "string", "app_name", "Tree Tracker"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"https://treetracker.org/api/mobile/"'
            buildConfigField 'String', 'DO_SPACES_ENDPOINT', '"nyc3"'
            buildConfigField 'String', 'DO_SPACES_BUCKET', '"treetracker-production"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Tree Tracker(debug)"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"http://test.treetracker.org/api/mobile/"'
            buildConfigField 'String', 'DO_SPACES_ENDPOINT', '"ams3"'
            buildConfigField 'String', 'DO_SPACES_BUCKET', '"treetracker-test"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
        }
        dev {
            initWith(debug)
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Tree Tracker(dev)"
            buildConfigField "Boolean", "GPS_ACCURACY", "false"
            buildConfigField 'String', 'BASE_URL', '"http://dev.treetracker.org/api/mobile/"'
            buildConfigField 'String', 'DO_SPACES_ENDPOINT', '"nyc3"'
            buildConfigField 'String', 'DO_SPACES_BUCKET', '"treetracker-dev"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "false"
        }

        prerelease {
            initWith(debug)
            applicationIdSuffix ".prerelease"
            resValue "string", "app_name", "Tree Tracker"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"https://treetracker.org/api/mobile/"'
            buildConfigField 'String', 'DO_SPACES_ENDPOINT', '"nyc3"'
            buildConfigField 'String', 'DO_SPACES_BUCKET', '"treetracker-production"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
        }

        staging {
            initWith(debug)
            applicationIdSuffix ".staging"
            resValue "string", "app_name", "Tree Tracker(staging)"
            buildConfigField "Boolean", "GPS_ACCURACY", "true"
            buildConfigField 'String', 'BASE_URL', '"http://staging.treetracker.org"'
            buildConfigField 'Boolean', 'ENABLE_FABRIC', "true"
        }

    }

    flavorDimensions "version"
    productFlavors {
        greenstand {
            dimension "version"
        }

        justdigit {
            dimension "version"
            applicationIdSuffix ".justdigit"
            buildConfigField "Boolean", 'TREE_HEIGHT_FEATURE_ENABLED', "true"
            buildConfigField 'Boolean', 'TREE_NOTE_FEATURE_ENABLED', "false"
        }
    }

    useLibrary 'org.apache.http.legacy'
}

androidExtensions {
    experimental = true
}

repositories {
    maven {
        url "https://maven.google.com"
    }
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'com.google.android.gms:play-services-maps:16.1.0'

    implementation 'com.amazonaws:aws-android-sdk-core:2.2.22'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.2.22'

    implementation 'org.koin:koin-android-viewmodel:2.0.0-GA'

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    //Database
    implementation 'androidx.room:room-runtime:2.1.0-alpha04'
    implementation 'androidx.room:room-coroutines:2.1.0-alpha04'

    kapt "android.arch.persistence.room:compiler:2.1.0-alpha04"
    androidTestImplementation 'android.arch.persistence.room:testing:2.1.0-alpha05'
    devImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    api 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    api "com.squareup.retrofit2:retrofit:${retrofit2Version}"
    api "com.squareup.retrofit2:converter-gson:${retrofit2Version}"

    api 'com.jakewharton.timber:timber:4.7.1'
    api('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
    api 'com.google.firebase:firebase-core:16.0.6'

    implementation "androidx.legacy:legacy-support-v4:${androidSupportVersion}"
}
configurations.all {
    resolutionStrategy {
        preferProjectModules()
        force 'com.google.code.gson:gson:2.8.5'
    }
}

play {
    track = 'beta' // or 'rollout' or 'production' or 'alpha'
}

apply plugin: 'com.google.gms.google-services'

